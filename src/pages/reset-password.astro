---
export const ssr = true;

import Layout from '@layouts/Layout.astro';
import { ResetPasswordForm } from '@components/Auth';

const token = Astro.url.searchParams.get('token');
let isTokenValid = false;
let errorMessage = '';

if (!token) {
	errorMessage = 'No reset token provided.';
} else {
	try {
		const res = await fetch(
			`${import.meta.env.PUBLIC_API_URL}/users/validate-token?token=${encodeURIComponent(token)}`,
			{ cache: 'no-store' }
		);
		const { valid, message } = await res.json();
		if (res.ok && valid) {
			isTokenValid = true;
		} else {
			errorMessage = message ?? 'Invalid or expired token.';
		}
	} catch (err) {
		console.error('Token validation error:', err);
		errorMessage = 'Failed to validate token. Please try again later.';
	}
}
---

<Layout title="Reset Password">
	{isTokenValid ? (
		<ResetPasswordForm client:only="react" token={token!} />
	) : (
		<div class="my-12 max-w-md mx-auto text-center">
			<h2 class="text-2xl font-semibold mb-4">Invalid Token</h2>
			<p class="text-error">{errorMessage}</p>
			<a href="/forgot-password" class="mt-4 btn btn-sm">Request new reset link</a>
		</div>
	)}
</Layout>
