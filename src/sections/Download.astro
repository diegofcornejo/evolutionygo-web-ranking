---
import { Icon } from 'astro-icon/components';
import type { GameClient } from '@types';
// import CommandTable from '@components/CommandTable.astro';
import CommandTable from '@components/CommandTable';

const title = 'Ready to duel?';
const subtitle = 'Just download a client';
const description =
	'Evolution does not have its own client. We recommend downloading the official EDOPro client or any of the other clients listed below.';

const clients: GameClient[] = [
	{
		name: 'YGO Mobile',
		link: 'https://ygom.top/',
		platforms: ['android'],
		trackEvent: 'download-click-ygomobile',
	},
	{
		name: 'EDOPro',
		link: 'https://projectignis.github.io/download.html',
		icon: { name: 'mdi:star', classes: 'text-warning text-xl' },
		platforms: ['windows', 'apple', 'linux', 'android'],
		trackEvent: 'download-click-edopro',
	},
	{
		name: 'MDPro3',
		link: 'https://discord.gg/C3bkVgfb',
		platforms: ['discord', 'windows', 'android'],
		trackEvent: 'download-click-mdpro3',
	},
	{
		name: 'Koishi Pro',
		link: 'https://koishi.pro/download/',
		platforms: ['windows', 'apple'],
		trackEvent: 'download-click-koishi',
	},
];

const title2 = 'Setup your client';
const description2 =
	'Once you have downloaded a client, you can setup your client by following the instructions below.';
const userConfigFileName = 'user_configs.json';

const instructions = [
	{
		description: `Select the components for your custom configuration. The following items will be included in the generated ${userConfigFileName} file:`,
		included: [
			{
				title: `Evolution Server`,
				link: 'http://server.evolutionygo.com',
				type: 'server',
				required: true,
				config: {
					name: 'Evolution Server',
					address: 'server.evolutionygo.com',
					duelport: 7911,
					roomaddress: 'server.evolutionygo.com',
					roomlistprotocol: 'http',
					roomlistport: 7922,
				},
			},
			{
				title: `Evolution Server Beta`,
				link: 'http://beta.server.evolutionygo.com',
				type: 'server',
				config: {
					name: 'Evolution Server Beta',
					address: 'beta.server.evolutionygo.com',
					duelport: 7912,
					roomaddress: 'beta.server.evolutionygo.com',
					roomlistprotocol: 'http',
					roomlistport: 7923,
				},
			},
			{
				title: `Evolution Forbidden & Limited Card Lists`,
				link: 'https://github.com/termitaklk/lflist',
				type: 'repo',
				required: true,
				config: {
					url: 'https://github.com/termitaklk/lflist',
					repo_name: 'Evolution Forbidden & Limited Card Lists',
					repo_path: './repositories/evolution/lflists',
					lflist_path: '.',
					should_update: true,
					should_read: true,
				},
			},
			{
				title: `Team13.fr Multilanguage updates`,
				link: 'https://github.com/Team13fr/IgnisMulti',
				type: 'repo',
				config: {
					url: 'https://github.com/Team13fr/IgnisMulti',
					repo_name: 'Team13.fr Multilanguage updates',
					repo_path: './config/languages',
					is_language: true,
					language: '',
					data_path: '',
					should_update: true,
					should_read: true,
				},
			},
			{
				title: `Lahrenheit EDOPro Skinpack`,
				link: 'https://github.com/Lahrenheit/EDOPRO-Skinpack',
				type: 'repo',
				config: {
					url: 'https://github.com/Lahrenheit/EDOPRO-Skinpack',
					repo_name: 'Lahrenheit EDOPro Skinpack',
					repo_path: './skin/',
					should_update: true,
					should_read: true,
				},
			},
			{
				title: `Español Alternativo by josevdr95`,
				link: 'https://github.com/josevdr95new/cdbespa-alternativo',
				type: 'repo',
				config: {
					url: 'https://github.com/josevdr95new/cdbespa-alternativo',
					repo_name: 'Español Alternativo by josevdr95',
					repo_path: './config/languages/Español-Alternativo',
					should_update: true,
					should_read: true,
				},
			},
		],
	},
	{
		description: `Move the generated ${userConfigFileName} file to the client folder (usually named 'config'), placing it alongside any existing 'configs.json' file.`, // Modified description
	},
	{
		description: `Open the client. In the server list, you should now see "Evolution Server" (and any other selected servers) as an option.`, // Modified description
	},
	{
		description: `Select your desired server and enjoy!`,
	},
];
---

<div class='py-24 bg-base-200 px-4' id='section-download'>
	<div class='flex flex-col gap-8 text-center place-items-center'>
		<h1
			class='text-3xl md:text-5xl md:leading-[3.5rem] font-bold pt-6 bg-gradient-to-r from-purple-500 via-blue-500 to-indigo-500 bg-clip-text text-transparent'
		>
			{title}<br />{subtitle}
		</h1>
		<h3 class='text-lg text-gray-400 leading-8 max-w-4xl'>{description}</h3>
	</div>

	<div class='flex flex-col md:flex-row gap-8 justify-center py-8'>
		{
			clients.map((client) => (
				<a
					href={client.link}
					target='_blank'
					class='btn btn-neutral btn-lg text-white hover:bg-secondary min-w-[200px] h-auto py-2'
					data-umami-event={client.trackEvent}
				>
					<div class='flex flex-col gap-2'>
						<div class='flex flex-row gap-2 items-center'>
							{client.icon && (
								<Icon name={client.icon.name} class={client.icon.classes} />
							)}
							{client.name}
						</div>
						<div class='flex flex-row gap-2 justify-center'>
							{client.platforms.map((platform) => (
								<Icon name={`mdi:${platform}`} class='text-xl text-white' />
							))}
						</div>
					</div>
				</a>
			))
		}
	</div>
	<div class='flex flex-col gap-0 text-center place-items-center' id='setup'>
		<h1
			class='text-2xl md:text-3xl md:leading-[3.5rem] font-bold pt-6 bg-gradient-to-r from-purple-500 via-blue-500 to-indigo-500 bg-clip-text text-transparent'
		>
			{title2}<br />
		</h1>
		<h3 class='text-lg text-gray-400 leading-8 max-w-4xl'>{description2}</h3>
		<div class='flex flex-col gap-2 text-left my-8 bg-base-300 p-4 rounded-lg'>
			{
				instructions.map((instruction, instructionIdx) => (
					<div class='flex flex-col gap-1'>
						<div class='flex flex-row gap-2 items-center justify-start text-base'>
							<span class='text-purple-500'>•</span>
							{instruction.description}
						</div>
						<div class='pl-4 text-sm text-gray-400'>
							{instruction.included && instructionIdx === 0 && (
								<div class='flex flex-col gap-3 mt-2 mb-2'>
									{instruction.included.map((includedItem, itemIdx) => {
										const isRequired = includedItem.required === true;
										const checkboxId = `included-item-${itemIdx}`;

										return (
											<div class='flex flex-row gap-2 items-center justify-start'>
												<input
													type='checkbox'
													id={checkboxId}
													class='checkbox checkbox-sm checkbox-primary included-item-checkbox'
													data-item-index={itemIdx}
													checked={isRequired}
													disabled={isRequired}
												/>
												<label
													for={checkboxId}
													class='cursor-pointer hover:text-white'
												>
													{includedItem.title}
												</label>
												{includedItem.link && (
													<a
														href={includedItem.link}
														target='_blank'
														class='hover:text-primary ml-1'
														title={`More info about ${includedItem.title}`}
													>
														<Icon
															name='mdi:information-outline'
															class='text-lg'
														/>
													</a>
												)}
											</div>
										);
									})}
								</div>
								<button
									id='generateConfigBtn'
									class='btn btn-primary mt-2 mb-2 w-full md:w-auto self-start'
									data-umami-event='download-custom-user-config'
								>
									<Icon name='mdi:download' class='text-xl mr-2' />
									Download {userConfigFileName}
								</button>
							)}
						</div>
					</div>
				))
			}
		</div>
	</div>
	<div class='flex flex-col text-center place-items-center' id='commands'>
		<CommandTable client:load />
	</div>
</div>

<script
	define:vars={{
		includedItemsConfig: instructions[0].included,
		generatedFileName: userConfigFileName,
	}}
>
	document.addEventListener('DOMContentLoaded', () => {
		const generateBtn = document.getElementById('generateConfigBtn');
		if (generateBtn) {
			generateBtn.addEventListener('click', generateAndDownloadConfig);
		}

		const checkboxes = document.querySelectorAll('.included-item-checkbox');
		checkboxes.forEach((checkbox) => {
			const itemIndex = parseInt(checkbox.dataset.itemIndex, 10);
			const itemData = includedItemsConfig[itemIndex];
			if (itemData && itemData.required === true) {
				checkbox.parentElement.querySelector('label').classList.add('font-bold');
			}
		});
	});

	function generateAndDownloadConfig() {
		const finalConfig = {
			repos: [],
			servers: [],
		};

		const checkboxes = document.querySelectorAll('.included-item-checkbox');
		checkboxes.forEach((checkbox) => {
			if (checkbox.checked) {
				const itemIndex = parseInt(checkbox.dataset.itemIndex, 10);
				const itemData = includedItemsConfig[itemIndex];

				if (itemData && itemData.config) {
					if (itemData.type === 'repo') {
						finalConfig.repos.push(itemData.config);
					} else if (itemData.type === 'server') {
						finalConfig.servers.push(itemData.config);
					}
				}
			}
		});

		const jsonString = JSON.stringify(finalConfig, null, 2);
		const blob = new Blob([jsonString], { type: 'application/json' });
		const url = URL.createObjectURL(blob);
		const a = document.createElement('a');
		a.href = url;
		a.download = generatedFileName;
		document.body.appendChild(a);
		a.click();
		document.body.removeChild(a);
		URL.revokeObjectURL(url);
	}
</script>
