---
import { Icon } from 'astro-icon/components';

const getAnnouncement = async () => {
	const res = await fetch(`${import.meta.env.PUBLIC_CACHET_API_URL}/api/v1/schedules`, {
		cache: 'no-store',
	});
	const COMPLETED = 2;
	const data = await res.json();
	const noCompleted = data.data.filter((announcement: any) => announcement.status < COMPLETED);
	const noCompletedWithUrl = noCompleted.map((announcement: any) => ({
		...announcement,
		url: `${import.meta.env.PUBLIC_CACHET_API_URL}/#scheduled-${announcement.id}`,
	}));
	return noCompletedWithUrl;
};
const announcements = await getAnnouncement();
---

<div class='dropdown dropdown-end mx-0 md:mx-2' data-umami-event='announcements-dropdown'>
	<button tabindex='0' role='button' class='btn btn-ghost btn-circle'>
		<div class='indicator'>
			<Icon name='mdi:bell-outline' class='h-6 w-6' />
			{announcements.length > 0 && (
				<span class='badge badge-xs badge-primary indicator-item'></span>
			)}
		</div>
	</button>
	<ul
		tabindex='0'
		class='menu menu-sm dropdown-content bg-base-300 rounded-box z-[1] mt-1 w-56 p-2 shadow border-1 border-secondary'
	>
		{announcements.length === 0 && (
			<li>
				<p class='text-center'>No announcements</p>
			</li>
		)}
		{announcements.map((announcement: any) => (
			<li>
				<a href={announcement.url} target='_blank' rel='noopener noreferrer'>
					<div class='flex flex-col gap-1 items-start'>
						<p class='font-bold'>{announcement.name}</p>
						<p class='text-xs text-gray-500'>{announcement.scheduled_at}</p>
					</div>
				</a>
			</li>
		))}
	</ul>
</div>
